@using DSitemapTester.BLL.Dtos;

@model TestViewModel

@{
    ViewBag.Title = "Test";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section styles {
    @Styles.Render("~/Content/DataTableStyles")
}

<div class="row">
    <div class="col-md-6">
        <div class="box">
            <div class="box-header with-border">
                <h3 class="box-title">Total tests</h3>
                <div class="box-tools pull-right">
                    <button class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-plus"></i></button>
                </div>
            </div>
            <div class="box-body">
                <div id="total-chart"></div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="box">
            <div class="box-header with-border">
                <h3 class="box-title">Url Tests</h3>
                <div class="box-tools pull-right">
                    <button class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-plus"></i></button>
                </div>
            </div>
            <div class="box-body">
                <div id="url-chart"></div>
            </div>
        </div>
    </div>
</div>

<div class="box">
    <div class="box-header with-border">
        <h3 class="box-title">Url Tests</h3>
        <div class="box-tools pull-right">
            <button class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-plus"></i></button>
        </div>
    </div>
    <div class="box-body">
        <div id="url-line-chart"></div>
    </div>
</div>

<div class="box">
    <div class="box-header with-border">
        <h2 style="text-align:center">WebResource : @Model.Url</h2>

        @*<h4 style="text-align:center">Date: @Model.Tests.First().Date</h4>*@
        @*<h4 style="text-align:center">Test is completed in @Model.Tests.First().Duration.ToString("0.00") seconds</h4>*@
    </div>
    <div class="box-body">
        <table id="testResults" class="table table-hover table-bordered table-striped table-condensed"
               cellspacing="1">
            <thead>
                <tr>
                    <th scope="col">Url</th>
                    <th scope="col">Minimal Response Time</th>
                    <th scope="col">Average Response Time</th>
                    <th scope="col">Maximal Response Time</th>
                    <th scope="col">Tests Count</th>
                </tr>
            </thead>
        </table>
    </div>
</div>

@section scripts {

    @Scripts.Render("~/Scripts/SignalR");
    @Scripts.Render("~/Scripts/DataTable");
    @Scripts.Render("~/Scripts/GoogleCharts");
    <script src="signalr/hubs"></script>

    <script>
        $(function () {
        // Declare a proxy to reference the hub.
        var hub = $.connection.testHub;

        hub.client.addMessage = function () {
            var id = @Model.TestId;
            loadTestResults(id);

            var data = loadChartResults(id).responseJSON;
            buildLineChart(data);
            buildPieCharts(data);
        };

        // Start the connection.
        $.connection.hub.start().done(function () {
        }).fail(function (e) {
        });
        });
    </script>

    <script>
        function loadChartResults(testId)
        {
            return $.ajax({
                type: 'GET',
                async: false,
                url: '/Chart/LoadChartResults?testId=' + testId,
                datatype: 'json',
                dataSrc: 'data'
            });
        }
    </script>

    <script>
        function loadTestResults(testId) {
            var testTable = document.getElementById('testResults');
            if (testTable)
            {
                $('#testResults').dataTable().fnDestroy();
            }
            $("#testResults").DataTable({
                "processing": false,
                "serverSide": true,
                "filter": false,
                "ajax": {
                    url: '/Test/LoadTestResults?testId=' + testId,
                    type: 'POST',
                    datatype: 'json',
                    dataSrc: 'data'
                },
                "columns": [
                    { 'data': 'Url', 'autoWidth': true,
                        "render": function ( data, type, full, meta ) {
                            return "<a href=" + data + ">" + data + '</a>';
                        }
                    },
                    { 'data': 'MinimalResponseTime.ResponseTime', 'autoWidth': true },
                    { 'data': 'AverageResponseTime.ResponseTime', 'autoWidth': true },
                    { 'data': 'MaximalResponseTime.ResponseTime', 'autoWidth': true },
                    { 'data': 'TestsCount', 'autoWidth': true }
                ],
            });
        };
</script>
    
    <script>
        window.onload = function () {
            $.post("@Url.Action("RunTest","Test")", 
                { testId : @Model.TestId, timeout: @Model.Timeout, testsCount: @Model.TestsCount});               
        }
    </script>    

    <script type="text/javascript">
        function buildPieCharts(results)
        {
            google.charts.load('current', { 'packages': ['corechart'] });
            google.charts.setOnLoadCallback(drawTotalChart);
            google.charts.setOnLoadCallback(drawUrlChart);

            function drawTotalChart() {

                var data = google.visualization.arrayToDataTable([
                   ['Task', 'Tests'],
                   ['Successful', results.data.TotalTestsCount - results.data.TotalWrongTestsCount],
                   ['Wrong',   results.data.TotalWrongTestsCount],
                ]);

                var options = {
                    title: 'Total Tests : ' + results.data.TotalTestsCount,
                    is3D: true,
                    colors: ['green', 'orange']
                }

                var chart = new google.visualization.PieChart(document.getElementById('total-chart'));

                chart.draw(data, options);
            }
            function drawUrlChart() {

                var data = google.visualization.arrayToDataTable([
                  ['Task', 'Url'],
                  ['Successful',results.data.SuccessfulUrls],
                  ['Wrong', results.data.WrongUrls],
                  ['Warning',  results.data.Tests.length - (results.data.SuccessfulUrls + results.data.WrongUrls)],
                ]);

                var options = {
                    title: 'Total Urls : ' + results.data.Tests.length,
                    vAxis: {minValue: 0,
                        maxValue: 100,
                        format: "percent"
                    },
                    sliceVisibilityThreshold:0,
                    is3D: true,
                    colors: ['red', 'blue', 'orange']
                };

                var chart = new google.visualization.PieChart(document.getElementById('url-chart'));

                chart.draw(data, options);
            }
        }
    </script>

    <script type="text/javascript">
        function buildLineChart(results)
        {
            google.charts.load('current', {'packages':['corechart']});
            google.charts.setOnLoadCallback(drawUrlLineChart);

            function drawUrlLineChart() {
                var data = new google.visualization.DataTable();
                data.addColumn('string', 'Url');
                data.addColumn('number', 'Maximal');
                data.addColumn('number', 'Average');
                data.addColumn('number', 'Minimum');

                for(var i = 0; i < results.data.Tests.length; i++)
                {
                    data.addRow([
                        results.data.Tests[i].Url, 
                        results.data.Tests[i].MaximalResponseTime.ResponseTime, 
                        results.data.Tests[i].AverageResponseTime.ResponseTime,  
                        results.data.Tests[i].MinimalResponseTime.ResponseTime
                        ]);
                }

                var options = {
                    title: 'Url Performance',
                    curveType: 'function',
                    legend: { position: 'bottom' }
                };

                var chart = new google.visualization.LineChart(document.getElementById('url-line-chart'));

                chart.draw(data, options);
            }
        }
    </script>

}







